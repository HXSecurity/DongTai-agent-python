{
  "status": 201,
  "msg": "success",
  "data": [
    {
      "type": 4,
      "enable": 1,
      "value": "path-traversal",
      "details": [
        {
          "source": "P1,file",
          "track": "true",
          "target": "",
          "value": "builtins.open",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "sql-injection",
      "details": [
        {
          "source": "P2",
          "track": "true",
          "target": "",
          "value": "sqlite3.Cursor.execute",
          "inherit": "false"
        },
        {
          "source": "P2",
          "track": "true",
          "target": "",
          "value": "sqlite3.Cursor.executemany",
          "inherit": "false"
        },
        {
          "source": "P2",
          "track": "true",
          "target": "",
          "value": "sqlite3.Cursor.executescript",
          "inherit": "false"
        },
        {
          "source": "P2,query",
          "track": "true",
          "target": "",
          "value": "psycopg2._psycopg.cursor.execute",
          "inherit": "false"
        },
        {
          "source": "P2,query",
          "track": "true",
          "target": "",
          "value": "psycopg2._psycopg.cursor.executemany",
          "inherit": "false"
        },
        {
          "source": "P2,operation",
          "track": "true",
          "target": "",
          "value": "mysql.connector.cursor.CursorBase.execute",
          "inherit": "false"
        },
        {
          "source": "P2,operation",
          "track": "true",
          "target": "",
          "value": "mysql.connector.cursor.CursorBase.executemany",
          "inherit": "false"
        },
        {
          "source": "P2,query",
          "track": "true",
          "target": "",
          "value": "MySQLdb.cursors.BaseCursor.execute",
          "inherit": "false"
        },
        {
          "source": "P2,query",
          "track": "true",
          "target": "",
          "value": "MySQLdb.cursors.BaseCursor.executemany",
          "inherit": "false"
        },
        {
          "source": "P2,query",
          "track": "true",
          "target": "",
          "value": "pymysql.cursors.Cursor.execute",
          "inherit": "false"
        },
        {
          "source": "P2,query",
          "track": "true",
          "target": "",
          "value": "pymysql.cursors.Cursor.executemany",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "exec-code",
      "details": [
        {
          "source": "P1",
          "track": "true",
          "target": "",
          "value": "builtins.eval",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "",
          "value": "builtins.exec",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "exec-command",
      "details": [
        {
          "source": "P1,command",
          "track": "true",
          "target": "",
          "value": "os.system",
          "inherit": "false"
        },
        {
          "source": "P1,cmd",
          "track": "true",
          "target": "",
          "value": "os.popen",
          "inherit": "false"
        },
        {
          "source": "P1,args",
          "track": "true",
          "target": "",
          "value": "subprocess.Popen",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "reflected-xss",
      "details": [
        {
          "source": "P2,rv",
          "track": "true",
          "target": "",
          "value": "flask.app.Flask.make_response",
          "inherit": "false"
        },
        {
          "source": "P2,content",
          "track": "true",
          "target": "",
          "value": "django.http.response.HttpResponse.__init__",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "xxe",
      "details": [
        {
          "source": "P1,text",
          "track": "true",
          "target": "",
          "value": "lxml.etree.fromstring",
          "inherit": "false"
        },
        {
          "source": "P1,source",
          "track": "true",
          "target": "",
          "value": "lxml.etree.parse",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "ssrf",
      "details": [
        {
          "source": "P1,url",
          "track": "true",
          "target": "",
          "value": "urllib.request.urlopen",
          "inherit": "false"
        },
        {
          "source": "P3,url",
          "track": "true",
          "target": "",
          "value": "requests.sessions.Session.request",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "untrusted-deserialization",
      "details": [
        {
          "source": "P2,stream",
          "track": "true",
          "target": "",
          "value": "yaml.loader.FullLoader.__init__",
          "inherit": "false"
        },
        {
          "source": "P2,stream",
          "track": "true",
          "target": "",
          "value": "yaml.loader.UnsafeLoader.__init__",
          "inherit": "false"
        },
        {
            "source": "P2,stream",
          "track": "true",
          "target": "",
          "value": "yaml.loader.Loader.__init__",
          "inherit": "false"
        },
        {
          "source": "P1,file",
          "track": "true",
          "target": "",
          "value": "pickle.load",
          "inherit": "false"
        },
        {
          "source": "P1,data",
          "track": "true",
          "target": "",
          "value": "pickle.loads",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "nosql-injection",
      "details": [
        {
          "source": "P2,filter",
          "track": "true",
          "target": "",
          "value": "pymongo.collection.Collection.find",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "ldap-injection",
      "details": [
        {
          "source": "P3,search_filter",
          "track": "true",
          "target": "",
          "value": "ldap3.core.connection.Connection.search",
          "inherit": "false"
        },
        {
          "source": "P4,filterstr",
          "track": "true",
          "target": "",
          "value": "ldap.ldapobject.SimpleLDAPObject.search_ext",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "crypto-bad-cipher",
      "details": [
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Crypto.Cipher._mode_cbc.CbcMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Crypto.Cipher._mode_cfb.CfbMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Crypto.Cipher._mode_ctr.CtrMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Crypto.Cipher._mode_eax.EaxMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Crypto.Cipher._mode_ecb.EcbMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Crypto.Cipher._mode_ofb.OfbMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Crypto.Cipher._mode_openpgp.OpenPgpMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Cryptodome.Cipher._mode_cbc.CbcMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Cryptodome.Cipher._mode_cfb.CfbMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Cryptodome.Cipher._mode_ctr.CtrMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Cryptodome.Cipher._mode_eax.EaxMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Cryptodome.Cipher._mode_ecb.EcbMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Cryptodome.Cipher._mode_ofb.OfbMode.encrypt",
          "inherit": "false"
        },
        {
          "source": "P1,2,plaintext",
          "track": "true",
          "target": "",
          "value": "Cryptodome.Cipher._mode_openpgp.OpenPgpMode.encrypt",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 4,
      "enable": 1,
      "value": "redos",
      "details": [
        {
          "source": "P1,pattern",
          "track": "true",
          "target": "",
          "value": "re.match",
          "inherit": "false"
        },
        {
          "source": "P1,pattern",
          "track": "true",
          "target": "",
          "value": "re.fullmatch",
          "inherit": "false"
        },
        {
          "source": "P1,pattern",
          "track": "true",
          "target": "",
          "value": "re.search",
          "inherit": "false"
        },
        {
          "source": "P1,pattern",
          "track": "true",
          "target": "",
          "value": "re.sub",
          "inherit": "false"
        },
        {
          "source": "P1,pattern",
          "track": "true",
          "target": "",
          "value": "re.subn",
          "inherit": "false"
        },
        {
          "source": "P1,pattern",
          "track": "true",
          "target": "",
          "value": "re.split",
          "inherit": "false"
        },
        {
          "source": "P1,pattern",
          "track": "true",
          "target": "",
          "value": "re.findall",
          "inherit": "false"
        },
        {
          "source": "P1,pattern",
          "track": "true",
          "target": "",
          "value": "re.finditer",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 2,
      "enable": 1,
      "value": "general-rules",
      "details": [
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "django.utils.datastructures.MultiValueDict.get",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "django.utils.datastructures.MultiValueDict.__getitem__",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "django.http.request.HttpRequest.read",
          "inherit": "false"
        },
        {
          "source": "P2,path",
          "track": "true",
          "target": "R",
          "value": "django.urls.resolvers.RoutePattern.match",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 2,
      "enable": 1,
      "value": "general-rules",
      "details": [
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "werkzeug.datastructures.getlist",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "werkzeug.datastructures.TypeConversionDict.get",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "werkzeug.datastructures.MultiDict.__getitem__",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "werkzeug.wrappers.request.Request.get_data",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "werkzeug.wrappers.base_request.BaseRequest.get_data",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 1,
      "enable": 1,
      "value": "general-rules",
      "details": [
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.str.__add__",
          "inherit": "false"
        },
        {
          "source": "P1,object",
          "track": "true",
          "target": "R",
          "value": "builtins.str.__new__",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.capitalize",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.casefold",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.center",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.str.cformat",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.encode",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.str.format",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.str.fstring",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.str.join",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.lower",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.ljust",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.lstrip",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.partition",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.str.replace",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.removeprefix",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.removesuffix",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.str.repeat",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.rjust",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.rpartition",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.rsplit",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.rstrip",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.split",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.splitlines",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.strip",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.swapcase",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.title",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.translate",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.upper",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.str.zfill",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.bytes.__add__",
          "inherit": "false"
        },
        {
          "source": "P1,source",
          "track": "true",
          "target": "R",
          "value": "builtins.bytes.__new__",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.bytes.cformat",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.bytes.decode",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.bytearray.__add__",
          "inherit": "false"
        },
        {
          "source": "P1,source",
          "track": "true",
          "target": "R",
          "value": "builtins.bytearray.__init__",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "builtins.bytearray.cformat",
          "inherit": "false"
        },
        {
          "source": "P1",
          "track": "true",
          "target": "R",
          "value": "builtins.bytearray.decode",
          "inherit": "false"
        },
        {
          "source": "P1,s",
          "track": "true",
          "target": "R",
          "value": "json.loads",
          "inherit": "false"
        },
        {
          "source": "P1,obj",
          "track": "true",
          "target": "R",
          "value": "json.dumps",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "flask.jsonify",
          "inherit": "false"
        },
        {
          "source": "P1,s",
          "track": "true",
          "target": "R",
          "value": "base64.b64encode",
          "inherit": "false"
        },
        {
          "source": "P1,s",
          "track": "true",
          "target": "R",
          "value": "base64.b64decode",
          "inherit": "false"
        },
        {
          "source": "P1,data",
          "track": "true",
          "target": "R",
          "value": "yaml.dump",
          "inherit": "false"
        },
        {
          "source": "P1,documents",
          "track": "true",
          "target": "R",
          "value": "yaml.dump_all",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "os.path.join",
          "inherit": "false"
        },
        {
          "source": "P1,string",
          "track": "true",
          "target": "R",
          "value": "urllib.parse.unquote",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "django.template.base.Template.render",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "django.template.base.render_value_in_context",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "Crypto.Cipher.Blowfish.new",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "Crypto.Cipher.DES.new",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "Cryptodome.Cipher.Blowfish.new",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "Cryptodome.Cipher.DES.new",
          "inherit": "false"
        }
      ]
    },
    {
      "type": 3,
      "enable": 1,
      "value": "general-rules",
      "details": [
        {
          "source": "P1,s",
          "track": "true",
          "target": "R",
          "value": "html.escape",
          "inherit": "false"
        },
        {
          "source": "P1,s",
          "track": "true",
          "target": "R",
          "value": "markupsafe.escape",
          "inherit": "false"
        },
        {
          "source": "P1,s",
          "track": "true",
          "target": "R",
          "value": "markupsafe.escape_silent",
          "inherit": "false"
        },
        {
          "source": "P",
          "track": "true",
          "target": "R",
          "value": "jinja2.runtime.escape",
          "inherit": "false"
        },
        {
          "source": "P1,assertion_value",
          "track": "true",
          "target": "R",
          "value": "ldap.filter.escape_filter_chars",
          "inherit": "false"
        },
        {
          "source": "P1,text",
          "track": "true",
          "target": "R",
          "value": "ldap3.utils.conv.escape_filter_chars",
          "inherit": "false"
        },
        {
          "source": "P1,pattern",
          "track": "true",
          "target": "R",
          "value": "re.escape",
          "inherit": "false"
        }
      ]
    }
  ]
}
